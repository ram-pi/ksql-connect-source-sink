version: '3.8'
services:
    # ELASTIC
    elasticsearch:
        container_name: elastic-1
        environment:
          - xpack.security.enabled=false
          - discovery.type=single-node 
        ports:
            - '9200:9200'
            - '9300:9300'
        image: 'docker.elastic.co/elasticsearch/elasticsearch:${ELK_TAG}'
    # KIBANA
    kibana:
        depends_on:
          - elasticsearch
        container_name: kibana
        ports:
            - '5601:5601'
        image: 'docker.elastic.co/kibana/kibana:${ELK_TAG}'
        environment:
          - ELASTICSEARCH_HOSTS=http://elastic-1:9200 
    # MARIADB    
    mariadb:
        container_name: mariadb
        command: --binlog-format=ROW --log-bin
        ports:
            - '3306:3306'
        environment:
            - MARIADB_USER=user
            - MARIADB_PASSWORD=user
            - MARIADB_ROOT_PASSWORD=root
        image: 'mariadb:${MARIADB_TAG}'
        volumes: 
          - ./dump/sl_dump_file.sql:/docker-entrypoint-initdb.d/sl_dump_file.sql
    # ZOOKEEPER
    zookeeper:
      container_name: "zookeeper"
      image: confluentinc/cp-zookeeper:${CF_TAG}
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        # ENABLE 4LW COMMANDS FROM EVERYWHERE
        # ZOOKEEPER JMX MONITORING 
        KAFKA_JMX_PORT: 40001
        KAFKA_JMX_HOSTNAME: localhost
        # ENABLE SASL 
        KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ports:
        - 2181:2181
        - 40001:40001
      cap_add:
        - NET_ADMIN
    # KAFKA BROKER
    kafka:
      container_name: "kafka"
      image: confluentinc/cp-server:${CF_TAG}
      hostname: kafka
      depends_on:
        - zookeeper
      environment:
        # KAFKA SECURITY CONFIGURATION  
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENERS: "INTERNAL://:9092, EXTERNAL://:19092"
        KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092, EXTERNAL://localhost:19092"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT"
        KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
        # KAFKA BROKER ID
        KAFKA_BROKER_ID: "1"
        # REQUIRED WHEN YOU HAVE A LESS THAN 3 KAFKA BROKERS
        KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: "1"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        # CONFLUENT METRICS
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        CONFLUENT_METRICS_ENABLE: 'true'
        CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:19092
        # KAFKA GENERAL CONFIGURATION
        KAFKA_DELETE_TOPIC_ENABLE: "true"
        # KAFKA JMX MONITORING 
        KAFKA_JMX_PORT: 40002
        KAFKA_JMX_HOSTNAME: localhost
        #KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka.sasl.jaas.conf"
      ports:
        - 19092:19092
        - 40002:40002
      cap_add:
        - NET_ADMIN
    # CONFLUENT - C3
    control-center:
      image: confluentinc/cp-enterprise-control-center:${CF_TAG}
      hostname: control-center
      container_name: control-center
      depends_on:
        - kafka
        - connect
        - schema-registry
      ports:
        - "9021:9021"
      environment:
        CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
        # CONTROL_CENTER_CONNECT_LOCAL_CLUSTER: "http://connect:8083"
        CONTROL_CENTER_CONNECT_CONNECT_CLUSTER: 'connect:8083'
        # Change healthcheck endpoint for CE 
        CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: "/connectors"
        CONTROL_CENTER_REPLICATION_FACTOR: 1
        CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
        CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
        CONFLUENT_METRICS_TOPIC_REPLICATION: 1
        CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
        CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
        CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        PORT: 9021
    # SCHEMA REGISTRY
    schema-registry:
      image: confluentinc/cp-schema-registry:${CF_TAG}
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - kafka
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    # CONNECT 
    connect:
      image: confluentinc/cp-kafka-connect:${CF_TAG}
      hostname: connect
      container_name: connect
      volumes:
        - ./connect-components:/usr/share/confluent-hub-components
      depends_on:
        - kafka
        - schema-registry
      ports:
        - "8083:8083"
      environment:
        CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
        CONNECT_REST_ADVERTISED_HOST_NAME: connect
        CONNECT_GROUP_ID: compose-connect-group
        CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
        CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
        CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
        CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
        CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
        #CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
        CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
        CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
        CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    # KSQL
    ksqldb-server:
      image: confluentinc/cp-ksqldb-server:${CF_TAG}
      hostname: ksqldb-server
      container_name: ksqldb-server
      depends_on:
        - kafka
        - connect
        - schema-registry
      ports:
        - "8088:8088"
      environment:
        KSQL_CONFIG_DIR: "/etc/ksql"
        KSQL_BOOTSTRAP_SERVERS: "kafka:9092"
        KSQL_HOST_NAME: ksqldb-server
        KSQL_LISTENERS: "http://0.0.0.0:8088"
        KSQL_CACHE_MAX_BYTES_BUFFERING: 0
        KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
        KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
        KSQL_KSQL_CONNECT_URL: "http://connect:8083"
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
        KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
    # KSQL CLI
    ksqldb-cli:
      image: confluentinc/cp-ksqldb-cli:${CF_TAG}
      container_name: ksqldb-cli
      depends_on:
        - kafka
        - connect
        - ksqldb-server
      entrypoint: /bin/sh
      volumes: 
        - ./ksql/statements.ksql:/ksql/statements.ksql
      tty: true